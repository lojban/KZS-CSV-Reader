'''
KZS CSV reader

Author: Ilmen
Last change: 2015-10-02

This program extracts a set of words together with their number of usage hits
from the CSV file generated by Korpora Zei Sisku along with the number that
represents the total word count of Korpora Zei Sisku.
Furthermore, a filter word set can be added for filtering out specific words
from the output, for example filtering the official gismu from the list of
all the gismu together with their frequency.

Here is how to use this program:

$ python kzs_csv_reader.py CSV_FILE KZS_NUM
Or alternatively:
$ python kzs_csv_reader.py CSV_FILE KZS_NUM FILTER_FILE

CSV_FILE being the file path of the Korpora Zei Sisku CSV file;
KZS_NUM being the total word count of KZS, which can be obtained by searching
for any word in KZS' interface, and looking at the resulting number of hits;
FILTER_FILE being the file path of a text file containing a list of words
separated by end of lines (for example, the list of all the official gismu,
if you want to filter them out from the output of this program).

Usage example:
$ python kzs_csv_reader.py yT9dn69X.csv 5397953 official_cmavo.txt
'''

import sys, csv

if len(sys.argv) < 3:
    print "Not enough parameters."
    quit()
else:
    s = []
    path = sys.argv[1]
    kzs_total = int(sys.argv[2])
    kzs_multiplier = kzs_total / 1000000.0
    THRESHOLD = 10
    print "Path = " + path + "\nKZS total = " + str(kzs_total)
    with open(path, "rb") as f:
        reader = csv.reader(f, delimiter=';')
        rownum = 0
        for row in reader:
            if rownum > 1:
                # print str(rownum) + ": " + row[0] + " | " + str(row[1])
                n = int(round(float(row[1]) * kzs_multiplier, 0))
                if n >= THRESHOLD:
                    s.append([row[0], n])
            rownum += 1
    if len(sys.argv) >= 4:
        mask_file_path = sys.argv[3]
        print "Filter file path = " + str(mask_file_path)
        mask = set()
        with open(mask_file_path, "r") as f:
            while True:
                l = f.readline().replace('\n', '').replace('\r', '')
                if l == '':
                    break
                mask.add(l)
        s2 = []
        for e in s:
            if e[0] not in mask:
                s2.append(e)
        s = s2
    s = sorted(s, reverse= False)
    s = sorted(s, key= lambda x: x[1], reverse= True)
    for e in s:
        print e[0].ljust(8) + " " + str(e[1]).rjust(4)
    print "Total:   " + str(len(s)).rjust(4)
    print "mu'o"

